import serial, time
ser = serial.Serial(input("Enter serial port to use > "), 115200)

hello_boot = b'!\x07\x90\xcd\x06\x00\xc9Hello World!\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00ye'

def reboot():
    ser.write(b"\x01")
    time.sleep(0.1)
    printout()
def wr_boot():
    ser.write(b"\xC0")
def call_loaded():
    ser.write(b"\x80")
    time.sleep(0.05)
    printout()
    
def send256(buffer):
    if type(buffer)==bytes and len(buffer)==256:
        ser.write(b"\x05")
        for i in range(0,256,8):
            ser.write(buffer[i:8+i])
            time.sleep(0.006)
    else:
        print("ERROR: cannot write, invalid buffer!")
def make_256(buffer):
    return buffer+bytes(256-len(buffer))
def printout():
    buffer = ser.read_all().replace(b'\x00',b'')
    try:
        print(buffer.decode().replace('\r','\n'))
    except:
        print(buffer)
def ldexec(fn):
    f = open(fn, 'rb')
    binary = f.read()
    f.close()

    whole_sectors = len(binary)//256

    reboot()

    for i in range(0,whole_sectors*256,256):
        send256(binary[i:i+256])
    send256(make_256(binary[whole_sectors*256:]))

    call_loaded()
def testG00nOS():
    ldexec("G00nOS/a.bin")
