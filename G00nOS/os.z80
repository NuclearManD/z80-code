include "header.z80"

org boot

_entry:
	ld hl, .setup_gfx
	call println
	call upd7220_setup
	ld hl, $0000 ; fill screen with black
	call gfx_fill
	
	xor a
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_newline
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	call gfx_wchr
	
	call gfx_text_curs_to_word
	call int_to_hex
	call println
	
	ld hl, (text_cursor_x)
	call int_to_hex
	call println
	
	ret
.setup_gfx: db "Setting up graphics...", 0
	
hex_table:
db "0123456789ABCDEF",0
; int_to_hex - convert HL into hex string
int_to_hex:
	push de
	ex de, hl
	ld hl, $8800;5
	;call alloc
	push hl
	ld a, d
	call .div16
	ld (hl), a
	inc hl
	ld a, d
	call .and15
	ld (hl), a
	inc hl
	ld a, e
	
	call .div16
	ld (hl), a
	inc hl
	ld a, e
	call .and15
	ld (hl), a
	inc hl
	ld a, 0
	ld (hl), 0
	pop hl
	pop de
	ret
.div16:
	srl a
	srl a
	srl a
	srl a
.and15:
	and 15
	push hl
	push de
	ld hl, hex_table
	ld d, 0
	ld e, a
	add hl, de
	ld a, (hl)
	pop de
	pop hl
	ret
include "upd7220.z80"
include "math.z80"